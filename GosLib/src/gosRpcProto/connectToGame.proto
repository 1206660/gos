syntax = "proto3";

package connectApp;
option go_package = "gosRPcProto";

// Interface exported by the server.
service RouteConnectGame {
    // A Bidirectional streaming RPC.
    //
    // Accepts a stream of RouteNotes sent while a route is being traversed,
    // while receiving other RouteNotes (e.g. from other users).
    rpc AgentStream(stream RouteMsg) returns (stream RouteMsg) {}

    rpc AgentRegister(RegisterMsg) returns (RegisterReply) {}

    rpc DeployScene(DeploySceneRequest) returns (DeploySceneReply) {}
}

// A RouteNote is a message sent while at a given point.
message RouteMsg {
    // The location from which the message is sent.
    string accountId = 1;

    // The message to be sent.
    bytes data = 2;
}

message RegisterMsg {
    string accountId = 1;
    string connectAppId = 2;
    bool isRegister = 3;
}

message RegisterReply {
    bool status = 1;
}

message DeploySceneRequest {
    string sceneId = 1;
}

message DeploySceneReply {
    bool success = 1;
}
